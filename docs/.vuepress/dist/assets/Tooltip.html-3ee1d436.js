import{_ as t,M as e,p as o,q as p,R as a,t as n,N as i,V as c,Q as l,a1 as r}from"./framework-94cd3f1f.js";const u={},d=r(`<h1 id="tooltip" tabindex="-1"><a class="header-anchor" href="#tooltip" aria-hidden="true">#</a> Tooltip</h1><hr><h2 id="import-component" tabindex="-1"><a class="header-anchor" href="#import-component" aria-hidden="true">#</a> Import component</h2><h4 id="in-html-header" tabindex="-1"><a class="header-anchor" href="#in-html-header" aria-hidden="true">#</a> In HTML header:</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>importmap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;imports&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;vue&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/scripts/path/to/vue.js&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span> <span class="token attr-name">crossorigin</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/scripts/path/to/tooltip.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="place-component" tabindex="-1"><a class="header-anchor" href="#place-component" aria-hidden="true">#</a> Place component</h2><h4 id="in-structure-file-global-component-with-or-without-attributes" tabindex="-1"><a class="header-anchor" href="#in-structure-file-global-component-with-or-without-attributes" aria-hidden="true">#</a> in structure file (global component), with or without attributes:</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>custom-tooltip</span> <span class="token punctuation">/&gt;</span></span>
  // OR
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>custom-tooltip</span>
    <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>is-large<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>black<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>white<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference-and-activate-component" tabindex="-1"><a class="header-anchor" href="#reference-and-activate-component" aria-hidden="true">#</a> Reference and activate component</h2><h4 id="component-is-automaticaly-referenced-on-all-html-tags-containing-attribute-data-tooltip" tabindex="-1"><a class="header-anchor" href="#component-is-automaticaly-referenced-on-all-html-tags-containing-attribute-data-tooltip" aria-hidden="true">#</a> Component is automaticaly referenced on all html tags containing attribute <code>data-tooltip</code>.</h4><h4 id="this-attribute-is-also-used-for-passing-content-to-the-component" tabindex="-1"><a class="header-anchor" href="#this-attribute-is-also-used-for-passing-content-to-the-component" aria-hidden="true">#</a> This attribute is also used for passing content to the component</h4><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>path<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Tooltip content<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  // OR
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Tooltip content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Action<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="set-is-active-attribute-to-true-to-show-toast" tabindex="-1"><a class="header-anchor" href="#set-is-active-attribute-to-true-to-show-toast" aria-hidden="true">#</a> Set <code>is-active</code> attribute to <code>true</code> to show toast:</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">const</span> <span class="token function-variable function">showToast</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    toast<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;is-active&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;true&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="passing-data-to-component" tabindex="-1"><a class="header-anchor" href="#passing-data-to-component" aria-hidden="true">#</a> Passing data to component</h2><h3 id="with-attributes" tabindex="-1"><a class="header-anchor" href="#with-attributes" aria-hidden="true">#</a> With attributes</h3><h4 id="we-can-use-some-helper-function-to-pass-all-the-attributes" tabindex="-1"><a class="header-anchor" href="#we-can-use-some-helper-function-to-pass-all-the-attributes" aria-hidden="true">#</a> We can use some helper function to pass all the attributes:</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">const</span> <span class="token function-variable function">setAttributes</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> attrs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> attrs<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="passing-attributes-example" tabindex="-1"><a class="header-anchor" href="#passing-attributes-example" aria-hidden="true">#</a> - <em>passing attributes example:</em></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">const</span> td <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;some title&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;some message&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;info&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">decoration</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colorized</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">backdrop</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&quot;#ffffff&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">font</span><span class="token operator">:</span> <span class="token string">&quot;&#39;Open Sans&#39;, sans-serif&quot;</span>
  <span class="token punctuation">}</span>

  <span class="token function">setAttributes</span><span class="token punctuation">(</span>toast<span class="token punctuation">,</span> td<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="with-props" tabindex="-1"><a class="header-anchor" href="#with-props" aria-hidden="true">#</a> With props</h3><h5 id="set-component-attribute-toast-data-as-json-with-following-properties" tabindex="-1"><a class="header-anchor" href="#set-component-attribute-toast-data-as-json-with-following-properties" aria-hidden="true">#</a> Set component attribute <code>toast-data</code> as JSON with following properties:</h5><ul><li><em><strong><code>title</code></strong></em> (String)</li><li><em><strong><code>message</code></strong></em> (String - <em>can be used html</em>)</li><li><em><strong><code>type</code></strong></em> (String - <em>info, success, error</em>)</li></ul><h4 id="passing-content-example" tabindex="-1"><a class="header-anchor" href="#passing-content-example" aria-hidden="true">#</a> - <em>passing content example</em></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">const</span> td <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;some title&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;some message&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;info&#39;</span>
  <span class="token punctuation">}</span>

  toast<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;toast-data&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>td<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="styles-can-be-set-by-setting-attribute-toast-style-as-json-with-following-properties" tabindex="-1"><a class="header-anchor" href="#styles-can-be-set-by-setting-attribute-toast-style-as-json-with-following-properties" aria-hidden="true">#</a> Styles can be set by setting attribute <code>toast-style</code> as JSON with following properties:</h5><p>- <em><strong><code>position</code></strong></em> (String - <em>center, left-top, right-top, left-bottom, right-bottom</em>)  - <em><strong><code>decoration</code></strong></em> (Boolean)  - <em><strong><code>backdrop</code></strong></em> (Boolean)  - <em><strong><code>colorized</code></strong></em> (Boolean)  - <em><strong><code>color</code></strong></em> (String - <em>any color</em>)  - <em><strong><code>font</code></strong></em> (String - <em>any font-family</em>)</p><h4 id="passing-styles-example" tabindex="-1"><a class="header-anchor" href="#passing-styles-example" aria-hidden="true">#</a> - <em><strong>passing styles example:</strong></em></h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  <span class="token keyword">const</span> ts <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">decoration</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colorized</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">backdrop</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&quot;#ffffff&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">font</span><span class="token operator">:</span> <span class="token string">&quot;&#39;Open Sans&#39;, sans-serif&quot;</span>
  <span class="token punctuation">}</span>

  toast<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;toast-style&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>ts<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,31),k={id:"demo",tabindex:"-1"},m=a("a",{class:"header-anchor",href:"#demo","aria-hidden":"true"},"#",-1);function h(v,g){const s=e("RouterLink");return o(),p("div",null,[d,a("h2",k,[m,n(),i(s,{to:"/components/Tooltip-Demo.html"},{default:c(()=>[n("Demo")]),_:1})]),l(` <style scoped>
a {
  background: rgb(58, 166, 117);
  color: white;
  border: none;
  border-radius: 5px;
  padding: .5em;
  font-weight:700;
  font-size: 1.5em;
  cursor: pointer;
}
a:hover {
  background: rgba(58, 166, 117, 0.51);
}
a:hover {
  text-decoration: none !important;
}
</style> `)])}const f=t(u,[["render",h],["__file","Tooltip.html.vue"]]);export{f as default};
